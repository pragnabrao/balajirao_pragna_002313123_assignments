/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PersonProfileManagement;


import java.awt.CardLayout;
import javax.swing.JPanel;
import model.Person;
import java.util.List;
import java.util.ArrayList;
import model.PersonDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.PersonProfileManagement.viewPeopleProfilesJPanel;
import model.Address;


/**
 *
 * @author Pragna Balaji Rao
 */
public class ListPeopleProfilesJPanel extends javax.swing.JPanel {
    
    public void populateAllPeople() {
        List<Person> allPersons = personDirectory.getPeople(); // Fetch all persons from the directory
        populateTable(allPersons); // Update UI with the data
    }
    
        JPanel personManagementContainer;
        PersonDirectory personDirectory;
        List<Person> foundPersons; 
        
        
    public ListPeopleProfilesJPanel(JPanel personManagementContainer, PersonDirectory personDirectory) {
        initComponents();
        this.personManagementContainer = personManagementContainer;
        this.personDirectory = personDirectory;
        
       
        
        populateAllPeople(); // Populate with all persons
        
       
    }
        


    /**
     * Creates new form ViewJPanel
     * @param personManagementContainer
     * @param personDirectory
     * @param foundPersons
     */
    public ListPeopleProfilesJPanel(JPanel personManagementContainer, PersonDirectory personDirectory, List<Person> foundPersons ) {
        
        initComponents();
        this.personManagementContainer = personManagementContainer; 
        this.personDirectory = personDirectory; 
        this.foundPersons = foundPersons;
        
        
        
        populateTable(foundPersons); 
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // </editor-fold>
@SuppressWarnings("unchecked")
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTtitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        ScrollPane = new javax.swing.JScrollPane();
        tbllistpeople = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));

        lblTtitle.setBackground(new java.awt.Color(51, 0, 204));
        lblTtitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTtitle.setText("List People Profiles");

        btnBack.setBackground(new java.awt.Color(153, 153, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(153, 153, 255));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setText("Save");

        btnUpdate.setBackground(new java.awt.Color(153, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("Update");

        ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tbllistpeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Home ZIP", "Work ZIP ", "Home City", "Work City"
            }
        ));
        tbllistpeople.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbllistpeopleMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(tbllistpeople);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lblTtitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnSave))
                        .addGap(168, 168, 168)
                        .addComponent(btnUpdate)))
                .addContainerGap(212, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblTtitle))
                .addGap(99, 99, 99)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public List<Person> getFoundPersons() {
        return foundPersons;
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        personManagementContainer.remove(this);
        CardLayout layout = (CardLayout) personManagementContainer.getLayout();
        layout.previous(personManagementContainer); 
    }//GEN-LAST:event_btnBackActionPerformed

    private void tbllistpeopleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbllistpeopleMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbllistpeople.getSelectedRow();
        if (selectedRow >= 0) {
            Person selectedPerson = foundPersons != null ? foundPersons.get(selectedRow) : personDirectory.getPeople().get(selectedRow);
            viewPeopleProfilesJPanel viewPanel = new viewPeopleProfilesJPanel(personManagementContainer, personDirectory, selectedPerson);
            personManagementContainer.add("ViewPeopleProfilesJPanel", viewPanel);
            CardLayout layout = (CardLayout) personManagementContainer.getLayout();
            layout.show(personManagementContainer, "ViewPeopleProfilesJPanel");
        }
        
    }//GEN-LAST:event_tbllistpeopleMouseClicked

    // Method to populate the table with all persons
    void populateTable(List<Person> persons) {
        
        if (persons == null) {
        persons = new ArrayList<>(); // Handle null case
        }
        DefaultTableModel model = (DefaultTableModel) tbllistpeople.getModel();
        model.setRowCount(0);
        
        for (Person person : persons) {
            Object[] row = new Object[6]; // Array size 6 to match the required columns
            row[0] = person.getFirstName(); // First Name
            row[1] = person.getLastName(); // Last Name
            
            // Accessing Address attributes through Person class
            Address personAddress = person.getAddress();
            
            // Ensure address is not null before accessing its fields
            if (personAddress != null) {
                row[2] = personAddress.getHomeZipCode(); // Home Zip Code
                row[3] = personAddress.getWorkZipCode(); // Work Zip Code
                row[4] = personAddress.getHomeCity(); // Home City
                row[5] = personAddress.getWorkCity(); // Work City
            } else {
                row[2] = ""; // Default empty value if address is null
                row[3] = "";
                row[4] = "";
                row[5] = "";
            }
            
            model.addRow(row); // Add the filled row to the table
        }
    }

 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblTtitle;
    private javax.swing.JTable tbllistpeople;
    // End of variables declaration//GEN-END:variables

}



